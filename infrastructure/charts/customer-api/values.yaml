# Default values for customer-api
replicaCount: 1

image:
  repository: "760347630853.dkr.ecr.us-east-1.amazonaws.com/customer-api"
  pullPolicy: IfNotPresent
  tag: "latest"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::760347630853:role/tcc-ufu-dev-pod-role"
  name: "customer-api-service-account"

podAnnotations:
  # Enable Istio sidecar injection
  sidecar.istio.io/inject: "true"

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

# Ingress disabled - using Istio Gateway instead
ingress:
  enabled: false

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Application configuration
config:
  awsRegion: "us-east-1"
  tableName: "Customers"
  port: "8080"
  dynamodbEndpoint: ""

# Istio configuration
istio:
  enabled: true
  # Destination rule for load balancing
  destinationRule:
    enabled: true
    trafficPolicy:
      loadBalancer:
        simple: LEAST_CONN

# Health checks
healthCheck:
  enabled: true
  path: "/health"
  initialDelaySeconds: 15
  periodSeconds: 10
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

readinessCheck:
  enabled: true
  path: "/health"
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3